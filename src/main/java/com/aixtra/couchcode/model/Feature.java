/*
 * Catalog Reader
 * The students solution to identifying prices on a furniture catalog
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.aixtra.couchcode.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.*;

import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Feature
 */
@JsonPropertyOrder({
  Feature.JSON_PROPERTY_ID,
  Feature.JSON_PROPERTY_TEXT,
  Feature.JSON_PROPERTY_NAME_IN_FORMULA,
  Feature.JSON_PROPERTY_PRINT_NAME,
  Feature.JSON_PROPERTY_OPTION_RANGES,
  Feature.JSON_PROPERTY_EXTERNAL_REFERENCE
})
@JsonTypeName("Feature")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2022-10-22T12:32:57.327248+02:00[Europe/Berlin]")
@Introspected
public class Feature {
    public static final String JSON_PROPERTY_ID = "id";
    private UUID id;

    public static final String JSON_PROPERTY_TEXT = "text";
    private String text;

    public static final String JSON_PROPERTY_NAME_IN_FORMULA = "nameInFormula";
    private String nameInFormula;

    /**
     * Gets or Sets printName
     */
    public enum PrintNameEnum {
        PRINT_NAME("PRINT_NAME"),
        NOT_PRINT_NAME("NOT_PRINT_NAME");

        private String value;

        PrintNameEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static PrintNameEnum fromValue(String value) {
            for (PrintNameEnum b : PrintNameEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
    public static final String JSON_PROPERTY_PRINT_NAME = "printName";
    private PrintNameEnum printName;

    public static final String JSON_PROPERTY_OPTION_RANGES = "optionRanges";
    private List<OptionRange> optionRanges = null;

    public static final String JSON_PROPERTY_EXTERNAL_REFERENCE = "externalReference";
    private String externalReference;

    public Feature() {
    }

    public Feature id(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     * @return id
     **/
    @Nullable
    @Schema(name = "id", required = false)
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(UUID id) {
        this.id = id;
    }

    public Feature text(String text) {
        this.text = text;
        return this;
    }

    /**
     * Get text
     * @return text
     **/
    @Nullable
    @Schema(name = "text", required = false)
    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getText() {
        return text;
    }

    @JsonProperty(JSON_PROPERTY_TEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setText(String text) {
        this.text = text;
    }

    public Feature nameInFormula(String nameInFormula) {
        this.nameInFormula = nameInFormula;
        return this;
    }

    /**
     * Get nameInFormula
     * @return nameInFormula
     **/
    @Nullable
    @Schema(name = "nameInFormula", required = false)
    @JsonProperty(JSON_PROPERTY_NAME_IN_FORMULA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNameInFormula() {
        return nameInFormula;
    }

    @JsonProperty(JSON_PROPERTY_NAME_IN_FORMULA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNameInFormula(String nameInFormula) {
        this.nameInFormula = nameInFormula;
    }

    public Feature printName(PrintNameEnum printName) {
        this.printName = printName;
        return this;
    }

    /**
     * Get printName
     * @return printName
     **/
    @Nullable
    @Schema(name = "printName", required = false)
    @JsonProperty(JSON_PROPERTY_PRINT_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PrintNameEnum getPrintName() {
        return printName;
    }

    @JsonProperty(JSON_PROPERTY_PRINT_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPrintName(PrintNameEnum printName) {
        this.printName = printName;
    }

    public Feature optionRanges(List<OptionRange> optionRanges) {
        this.optionRanges = optionRanges;
        return this;
    }

    public Feature addOptionRangesItem(OptionRange optionRangesItem) {
        if (this.optionRanges == null) {
            this.optionRanges = new ArrayList<>();
        }
        this.optionRanges.add(optionRangesItem);
        return this;
    }

    /**
     * Get optionRanges
     * @return optionRanges
     **/
    @Nullable
    @Schema(name = "optionRanges", required = false)
    @JsonProperty(JSON_PROPERTY_OPTION_RANGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<OptionRange> getOptionRanges() {
        return optionRanges;
    }

    @JsonProperty(JSON_PROPERTY_OPTION_RANGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOptionRanges(List<OptionRange> optionRanges) {
        this.optionRanges = optionRanges;
    }

    public Feature externalReference(String externalReference) {
        this.externalReference = externalReference;
        return this;
    }

    /**
     * Get externalReference
     * @return externalReference
     **/
    @Nullable
    @Schema(name = "externalReference", required = false)
    @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExternalReference() {
        return externalReference;
    }

    @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExternalReference(String externalReference) {
        this.externalReference = externalReference;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Feature feature = (Feature) o;
        return Objects.equals(this.id, feature.id) &&
            Objects.equals(this.text, feature.text) &&
            Objects.equals(this.nameInFormula, feature.nameInFormula) &&
            Objects.equals(this.printName, feature.printName) &&
            Objects.equals(this.optionRanges, feature.optionRanges) &&
            Objects.equals(this.externalReference, feature.externalReference);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, text, nameInFormula, printName, optionRanges, externalReference);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Feature {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    text: ").append(toIndentedString(text)).append("\n");
        sb.append("    nameInFormula: ").append(toIndentedString(nameInFormula)).append("\n");
        sb.append("    printName: ").append(toIndentedString(printName)).append("\n");
        sb.append("    optionRanges: ").append(toIndentedString(optionRanges)).append("\n");
        sb.append("    externalReference: ").append(toIndentedString(externalReference)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
