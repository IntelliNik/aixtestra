/*
 * Catalog Reader
 * The students solution to identifying prices on a furniture catalog
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.aixtra.couchcode.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Money
 */
@JsonPropertyOrder({
  Money.JSON_PROPERTY_CURRENCY_UNIT,
  Money.JSON_PROPERTY_AMOUNT_IN_MINOR_UNITS
})
@JsonTypeName("Money")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2022-10-22T16:30:57.436439+02:00[Europe/Berlin]")
@Introspected
public class Money {
    public static final String JSON_PROPERTY_CURRENCY_UNIT = "currencyUnit";
    private String currencyUnit;

    public static final String JSON_PROPERTY_AMOUNT_IN_MINOR_UNITS = "amountInMinorUnits";
    private Long amountInMinorUnits;

    public Money() {
    }

    public Money currencyUnit(String currencyUnit) {
        this.currencyUnit = currencyUnit;
        return this;
    }

    /**
     * Get currencyUnit
     * @return currencyUnit
     **/
    @Nullable
    @Schema(name = "currencyUnit", required = false)
    @JsonProperty(JSON_PROPERTY_CURRENCY_UNIT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCurrencyUnit() {
        return currencyUnit;
    }

    @JsonProperty(JSON_PROPERTY_CURRENCY_UNIT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCurrencyUnit(String currencyUnit) {
        this.currencyUnit = currencyUnit;
    }

    public Money amountInMinorUnits(Long amountInMinorUnits) {
        this.amountInMinorUnits = amountInMinorUnits;
        return this;
    }

    /**
     * Get amountInMinorUnits
     * @return amountInMinorUnits
     **/
    @Nullable
    @Schema(name = "amountInMinorUnits", required = false)
    @JsonProperty(JSON_PROPERTY_AMOUNT_IN_MINOR_UNITS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getAmountInMinorUnits() {
        return amountInMinorUnits;
    }

    @JsonProperty(JSON_PROPERTY_AMOUNT_IN_MINOR_UNITS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAmountInMinorUnits(Long amountInMinorUnits) {
        this.amountInMinorUnits = amountInMinorUnits;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Money money = (Money) o;
        return Objects.equals(this.currencyUnit, money.currencyUnit) &&
            Objects.equals(this.amountInMinorUnits, money.amountInMinorUnits);
    }

    @Override
    public int hashCode() {
        return Objects.hash(currencyUnit, amountInMinorUnits);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Money {\n");
        sb.append("    currencyUnit: ").append(toIndentedString(currencyUnit)).append("\n");
        sb.append("    amountInMinorUnits: ").append(toIndentedString(amountInMinorUnits)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
