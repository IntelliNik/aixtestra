/*
 * Catalog Reader
 * The students solution to identifying prices on a furniture catalog
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.aixtra.couchcode.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * OptionSelection
 */
@JsonPropertyOrder({
  OptionSelection.JSON_PROPERTY_FEATURE_ID,
  OptionSelection.JSON_PROPERTY_OPTION_ID
})
@JsonTypeName("OptionSelection")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2022-10-22T16:30:57.436439+02:00[Europe/Berlin]")
@Introspected
public class OptionSelection {
    public static final String JSON_PROPERTY_FEATURE_ID = "featureId";
    private UUID featureId;

    public static final String JSON_PROPERTY_OPTION_ID = "optionId";
    private UUID optionId;

    public OptionSelection() {
    }

    public OptionSelection featureId(UUID featureId) {
        this.featureId = featureId;
        return this;
    }

    /**
     * Get featureId
     * @return featureId
     **/
    @Nullable
    @Schema(name = "featureId", required = false)
    @JsonProperty(JSON_PROPERTY_FEATURE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getFeatureId() {
        return featureId;
    }

    @JsonProperty(JSON_PROPERTY_FEATURE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFeatureId(UUID featureId) {
        this.featureId = featureId;
    }

    public OptionSelection optionId(UUID optionId) {
        this.optionId = optionId;
        return this;
    }

    /**
     * Get optionId
     * @return optionId
     **/
    @Nullable
    @Schema(name = "optionId", required = false)
    @JsonProperty(JSON_PROPERTY_OPTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getOptionId() {
        return optionId;
    }

    @JsonProperty(JSON_PROPERTY_OPTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOptionId(UUID optionId) {
        this.optionId = optionId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OptionSelection optionSelection = (OptionSelection) o;
        return Objects.equals(this.featureId, optionSelection.featureId) &&
            Objects.equals(this.optionId, optionSelection.optionId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(featureId, optionId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OptionSelection {\n");
        sb.append("    featureId: ").append(toIndentedString(featureId)).append("\n");
        sb.append("    optionId: ").append(toIndentedString(optionId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
