/*
 * Client API
 * API called by backend
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.aixtra.couchcode.client.challenge.model;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;

import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * Product
 */
@JsonPropertyOrder({
  Product.JSON_PROPERTY_FEATURES,
  Product.JSON_PROPERTY_PRICES
})
@JsonTypeName("Product")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2022-10-22T18:01:35.219427+02:00[Europe/Berlin]")
@Introspected
public class Product {
    public static final String JSON_PROPERTY_FEATURES = "features";
    private List<Feature> features = new ArrayList<>();

    public static final String JSON_PROPERTY_PRICES = "prices";
    private List<PriceDefinitionEntry> prices = new ArrayList<>();

    public Product(List<Feature> features, List<PriceDefinitionEntry> prices) {
        this.features = features;
        this.prices = prices;
    }

    public Product features(List<Feature> features) {
        this.features = features;
        return this;
    }

    public Product addFeaturesItem(Feature featuresItem) {
        this.features.add(featuresItem);
        return this;
    }

    /**
     * Get features
     * @return features
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_FEATURES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<Feature> getFeatures() {
        return features;
    }

    @JsonProperty(JSON_PROPERTY_FEATURES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFeatures(List<Feature> features) {
        this.features = features;
    }

    public Product prices(List<PriceDefinitionEntry> prices) {
        this.prices = prices;
        return this;
    }

    public Product addPricesItem(PriceDefinitionEntry pricesItem) {
        this.prices.add(pricesItem);
        return this;
    }

    /**
     * Get prices
     * @return prices
     **/
    @NotNull
    @JsonProperty(JSON_PROPERTY_PRICES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<PriceDefinitionEntry> getPrices() {
        return prices;
    }

    @JsonProperty(JSON_PROPERTY_PRICES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPrices(List<PriceDefinitionEntry> prices) {
        this.prices = prices;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Product product = (Product) o;
        return Objects.equals(this.features, product.features) &&
            Objects.equals(this.prices, product.prices);
    }

    @Override
    public int hashCode() {
        return Objects.hash(features, prices);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Product {\n");
        sb.append("    features: ").append(toIndentedString(features)).append("\n");
        sb.append("    prices: ").append(toIndentedString(prices)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
